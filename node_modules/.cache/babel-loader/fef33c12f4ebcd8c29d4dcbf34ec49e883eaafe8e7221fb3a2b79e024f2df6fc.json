{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      std: '',\n      div: '',\n      sub: '',\n      password: '',\n      nameError: '',\n      emailError: '',\n      stdError: '',\n      divError: '',\n      subError: '',\n      passwordError: '',\n      dialog: false,\n      dialog2: false,\n      passwordFieldType: 'password'\n    };\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\n    },\n    validate() {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      this.emailError = !emailRegex.test(this.email) ? 'Enter a valid email address' : '';\n\n      // Example: validate name\n      this.nameError = this.name.trim() === '' ? 'Name is required' : '';\n\n      // Example: validate std\n      const stdValue = parseInt(this.std);\n      this.stdError = isNaN(stdValue) || stdValue < 0 || stdValue > 12 ? 'Class must be a number between 0 and 12' : '';\n\n      // Example: validate div\n      this.divError = this.div.trim() === '' ? 'Division is required' : '';\n\n      // Example: validate sub\n      this.subError = this.sub.trim() === '' ? 'Subject is required' : '';\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\n      this.passwordError = !passwordRegex.test(this.password) ? 'Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, and one number' : '';\n\n      // Check if all errors are empty\n      return this.nameError === '' && this.emailError === '' && this.stdError === '' && this.divError === '' && this.subError === '' && this.passwordError === '';\n    },\n    async register() {\n      if (this.validate()) {\n        try {\n          const response = await axios.post(`${this.$store.getters.getUrl}/api/REG`, {\n            \"teacherName\": this.name,\n            \"password\": this.password,\n            \"email\": this.email,\n            \"standard\": this.std,\n            \"division\": this.div,\n            \"subject\": this.sub,\n            \"role\": 'teacher'\n          });\n          if (response.status >= 200 || response.status < 300) {\n            this.dialog2 = true;\n            this.dialog = !this.dialog;\n            this.clearForm();\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    },\n    clearForm() {\n      this.name = '';\n      this.email = '';\n      this.std = '';\n      this.div = '';\n      this.sub = '';\n      this.password = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","data","name","email","std","div","sub","password","nameError","emailError","stdError","divError","subError","passwordError","dialog","dialog2","passwordFieldType","methods","togglePasswordVisibility","validate","emailRegex","test","trim","stdValue","parseInt","isNaN","passwordRegex","register","response","post","$store","getters","getUrl","status","clearForm","error","console"],"sources":["C:\\Users\\LENOVO\\Documents\\practice\\siya\\newlibrary-main\\newlibrary-main\\src\\components\\SignupBtn.vue"],"sourcesContent":["<template>\r\n  <v-dialog width=\"450\" v-model=\"dialog\">\r\n    <template v-slot:activator=\"{ props }\">\r\n      <v-btn v-bind=\"props\" text=\"Sign Up\" class=\"btn buttonstyle text-white\"></v-btn>\r\n    </template>\r\n    <template v-slot:default=\"{ isActive }\">\r\n      <v-card-actions>\r\n        <v-icon class=\"mdi mdi-close text-white\" @click=\"isActive.value = false\"></v-icon>\r\n      </v-card-actions>\r\n      <v-card title=\"Welcome To Prathibhatheeram!\" class=\"text-center\">\r\n        <v-card-text>\r\n          <form @submit.prevent=\"register\">\r\n            <div class=\"my-3\">\r\n              <input type=\"text\" class=\"form-control borderstyle\" v-model=\"name\" placeholder=\"Enter name\">\r\n              <span v-if=\"nameError\" class=\"error\">{{ nameError }}</span>\r\n            </div>\r\n            <div class=\"my-3\">\r\n              <input type=\"email\" class=\"form-control borderstyle\" v-model=\"email\" placeholder=\"Enter email\">\r\n              <span v-if=\"emailError\" class=\"error\">{{ emailError }}</span>\r\n            </div>\r\n            <div class=\"my-3\">\r\n              <input type=\"text\" class=\"form-control borderstyle\" v-model=\"std\" placeholder=\"Enter your class\">\r\n              <span v-if=\"stdError\" class=\"error\">{{ stdError }}</span>\r\n            </div>\r\n            <div class=\"my-3\">\r\n              <input type=\"text\" class=\"form-control borderstyle\" v-model=\"div\" placeholder=\"Enter your division\">\r\n              <span v-if=\"divError\" class=\"error\">{{ divError }}</span>\r\n            </div>\r\n            <div class=\"my-3\">\r\n              <input type=\"text\" class=\"form-control borderstyle\" v-model=\"sub\" placeholder=\"Enter your subject\">\r\n              <span v-if=\"subError\" class=\"error\">{{ subError }}</span>\r\n            </div>\r\n            <div class=\"my-3 password-container\">\r\n              <input :type=\"passwordFieldType\" v-model=\"password\" class=\"form-control borderstyle\" placeholder=\"Password\">\r\n              <span class=\"password-toggle\" @click=\"togglePasswordVisibility\">\r\n                <v-icon :class=\"passwordFieldType === 'password' ? 'mdi mdi-eye-off' : 'mdi mdi-eye'\"></v-icon>\r\n              </span>\r\n              <span v-if=\"passwordError\" class=\"error\">{{ passwordError }}</span>\r\n            </div>\r\n            <v-btn type=\"submit\" class=\"btn buttonstyle text-white mt-3 mb-4\" color=\"#303b1b\">Sign Up</v-btn>\r\n          </form>\r\n        </v-card-text>\r\n      </v-card>\r\n    </template>\r\n  </v-dialog>\r\n  <v-dialog v-model=\"dialog2\">\r\n    <v-card class=\"mx-auto rounded-5\" elevation=\"2\" max-width=\"400\" width=\"100%\" height=\"300\">\r\n      <v-card-title class=\"green-header bg-green py-3\"></v-card-title>\r\n      <v-card-text class=\"text-success text-center\">\r\n        <v-icon class=\"mb-2 mt-2\" color=\"success\" icon=\"mdi-check-circle\" size=\"100\"></v-icon>\r\n        <h2>Successfully Registered</h2>\r\n        <p>Get the app from Play Store</p>\r\n      </v-card-text>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      std: '',\r\n      div: '',\r\n      sub: '',\r\n      password: '',\r\n      nameError: '',\r\n      emailError: '',\r\n      stdError: '',\r\n      divError: '',\r\n      subError: '',\r\n      passwordError: '',\r\n      dialog: false,\r\n      dialog2: false,\r\n      passwordFieldType: 'password'\r\n    };\r\n  },\r\n  methods: {\r\n    togglePasswordVisibility() {\r\n      this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\r\n    },\r\n    validate() {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      this.emailError = !emailRegex.test(this.email) ? 'Enter a valid email address' : '';\r\n\r\n      // Example: validate name\r\n      this.nameError = this.name.trim() === '' ? 'Name is required' : '';\r\n\r\n      // Example: validate std\r\n      const stdValue = parseInt(this.std);\r\n      this.stdError = isNaN(stdValue) || stdValue < 0 || stdValue > 12 ? 'Class must be a number between 0 and 12' : '';\r\n\r\n      // Example: validate div\r\n      this.divError = this.div.trim() === '' ? 'Division is required' : '';\r\n\r\n      // Example: validate sub\r\n      this.subError = this.sub.trim() === '' ? 'Subject is required' : '';\r\n\r\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n      this.passwordError = !passwordRegex.test(this.password) ?\r\n        'Password must be at least 8 characters long and include at least one uppercase letter, one lowercase letter, and one number' : '';\r\n\r\n      // Check if all errors are empty\r\n      return (\r\n        this.nameError === '' &&\r\n        this.emailError === '' &&\r\n        this.stdError === '' &&\r\n        this.divError === '' &&\r\n        this.subError === '' &&\r\n        this.passwordError === ''\r\n      );\r\n    },\r\n    async register() {\r\n      if (this.validate()) {\r\n        try {\r\n          const response = await axios.post(`${this.$store.getters.getUrl}/api/REG`, {\r\n            \"teacherName\": this.name,\r\n            \"password\": this.password,\r\n            \"email\": this.email,\r\n            \"standard\": this.std,\r\n            \"division\": this.div,\r\n            \"subject\": this.sub,\r\n            \"role\": 'teacher'\r\n          });\r\n          if (response.status >= 200 || response.status < 300) {\r\n            this.dialog2 = true; \r\n            this.dialog = !this.dialog;\r\n            this.clearForm();\r\n          }\r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n      }\r\n    },\r\n    clearForm() {\r\n      this.name = '';\r\n      this.email = '';\r\n      this.std = '';\r\n      this.div = '';\r\n      this.sub = '';\r\n      this.password = '';\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.log-in input {\r\n  width: 300px;\r\n  height: 40px;\r\n  padding-left: 20px;\r\n  display: block;\r\n  margin-bottom: 10px; /* Reduced margin between input and error */\r\n  margin-right: auto;\r\n}\r\n.error {\r\n  color: rgb(235, 40, 40);\r\n}\r\n.btn {\r\n  background-color: rgb(117, 184, 211);\r\n}\r\n.btn:hover {\r\n  background: rgb(16, 100, 133);\r\n}\r\n.buttonstyle {\r\n  background-color: #303b1b;\r\n}\r\n.password-container {\r\n  position: relative;\r\n}\r\n.password-toggle {\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 10px;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n}\r\n.password-toggle i {\r\n  font-size: 18px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}