{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      pswd: '',\n      email: '',\n      emailError: '',\n      passwordError: '',\n      passwordFieldType: 'password'\n    };\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\n    },\n    async login() {\n      this.emailError = '';\n      this.passwordError = '';\n      if (!this.email || !this.pswd) {\n        if (!this.email) this.emailError = 'Email is required';\n        if (!this.pswd) this.passwordError = 'Password is required';\n        return;\n      }\n\n      // Email validation\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(this.email)) {\n        this.emailError = 'Invalid email address';\n        return;\n      }\n\n      // Password validation\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+}{\":;'?/>.<,])[a-zA-Z\\d!@#$%^&*()_+}{\":;'?/>.<,]{8,}$/;\n      if (!passwordRegex.test(this.pswd)) {\n        this.passwordError = 'Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, special character and one number';\n        return;\n      }\n      try {\n        this.emailError = '';\n        this.passwordError = '';\n        const response = await axios.post(`${this.$store.getters.getUrl}/admin/AdminLogin`, {\n          \"email\": this.email,\n          \"password\": this.pswd\n        });\n        if (response.status === 200) {\n          this.$router.push('/adminpage');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","pswd","email","emailError","passwordError","passwordFieldType","methods","togglePasswordVisibility","login","emailRegex","test","passwordRegex","response","post","$store","getters","getUrl","status","$router","push","error","console"],"sources":["C:\\Users\\LENOVO\\Documents\\practice\\siya\\newlibrary-main\\newlibrary-main\\src\\components\\AdminLogin.vue"],"sourcesContent":["<template>\r\n    <v-main>\r\n        <v-container justify-center>\r\n            <section class=\"\">\r\n  <div class=\"container-fluid mt-5 pt-5\">\r\n    <div class=\"row d-flex justify-content-start align-items-center\">\r\n      <div class=\"col-md-9 col-lg-6 col-xl-5\">\r\n        <v-img src=\"../assets/Login book.png\"\r\n          class=\"img-fluid\"></v-img>\r\n      </div>\r\n      <div class=\"col-md-8 col-lg-6 col-xl-4 offset-xl-1\">\r\n        <form>\r\n          <!-- Email input -->\r\n          <div data-mdb-input-init class=\"form-outline mb-4\">\r\n              <v-text-field label=\"Enter Your Email\" v-model=\"email\" variant=\"solo\" class=\"custom-text-field\"></v-text-field>\r\n          </div>\r\n          <!-- Password input -->\r\n          <div data-mdb-input-init class=\"form-outline mb-3\">\r\n            <v-text-field label=\"Enter your Password\" v-model=\"pswd\" variant=\"solo\" class=\"custom-text-field\"></v-text-field>\r\n          </div>\r\n\r\n          <div class=\"text-center text-lg-start mt-4 pt-2\">\r\n            <v-btn \r\n              style=\" background-color: #007bff; color: white;\">Login</v-btn>\r\n            <p class=\"small fw-bold mt-2 pt-1 mb-0\">Don't have an account? <router-link to=\"/adminregister\"\r\n              >Register</router-link></p>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n        </v-container>\r\n    </v-main>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  data() {\r\n    return {\r\n      pswd: '',\r\n      email: '',\r\n      emailError: '',\r\n      passwordError: '',\r\n      passwordFieldType: 'password'\r\n    }\r\n  },\r\n  methods: {\r\n    togglePasswordVisibility() {\r\n      this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password';\r\n    },\r\n    async login() {\r\n      this.emailError = '';\r\n      this.passwordError = '';\r\n      if (!this.email || !this.pswd) {\r\n        if (!this.email) this.emailError = 'Email is required';\r\n        if (!this.pswd) this.passwordError = 'Password is required';\r\n        return;\r\n      }\r\n\r\n      // Email validation\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(this.email)) {\r\n        this.emailError = 'Invalid email address';\r\n        return;\r\n      }\r\n\r\n      // Password validation\r\n      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+}{\":;'?/>.<,])[a-zA-Z\\d!@#$%^&*()_+}{\":;'?/>.<,]{8,}$/;\r\n      if (!passwordRegex.test(this.pswd)) {\r\n        this.passwordError = 'Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, special character and one number';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        this.emailError = '';\r\n        this.passwordError = '';\r\n        const response = await axios.post(`${this.$store.getters.getUrl}/admin/AdminLogin`, {\r\n          \"email\": this.email,\r\n          \"password\": this.pswd,\r\n        });\r\n        if (response.status === 200) {\r\n          this.$router.push('/adminpage');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n:deep(.v-input__control ) {\r\n  background-color: white; /* Set the input text color to white */\r\n}\r\n</style>"],"mappings":";AAsCA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE,EAAE;MACjBC,iBAAiB,EAAE;IACrB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACF,iBAAgB,GAAI,IAAI,CAACA,iBAAgB,KAAM,UAAS,GAAI,MAAK,GAAI,UAAU;IACtF,CAAC;IACD,MAAMG,KAAKA,CAAA,EAAG;MACZ,IAAI,CAACL,UAAS,GAAI,EAAE;MACpB,IAAI,CAACC,aAAY,GAAI,EAAE;MACvB,IAAI,CAAC,IAAI,CAACF,KAAI,IAAK,CAAC,IAAI,CAACD,IAAI,EAAE;QAC7B,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,UAAS,GAAI,mBAAmB;QACtD,IAAI,CAAC,IAAI,CAACF,IAAI,EAAE,IAAI,CAACG,aAAY,GAAI,sBAAsB;QAC3D;MACF;;MAEA;MACA,MAAMK,UAAS,GAAI,4BAA4B;MAC/C,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAACR,KAAK,CAAC,EAAE;QAChC,IAAI,CAACC,UAAS,GAAI,uBAAuB;QACzC;MACF;;MAEA;MACA,MAAMQ,aAAY,GAAI,wGAAwG;MAC9H,IAAI,CAACA,aAAa,CAACD,IAAI,CAAC,IAAI,CAACT,IAAI,CAAC,EAAE;QAClC,IAAI,CAACG,aAAY,GAAI,+IAA+I;QACpK;MACF;MAEA,IAAI;QACF,IAAI,CAACD,UAAS,GAAI,EAAE;QACpB,IAAI,CAACC,aAAY,GAAI,EAAE;QACvB,MAAMQ,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAE,GAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,MAAO,mBAAkB,EAAE;UAClF,OAAO,EAAE,IAAI,CAACd,KAAK;UACnB,UAAU,EAAE,IAAI,CAACD;QACnB,CAAC,CAAC;QACF,IAAIW,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}